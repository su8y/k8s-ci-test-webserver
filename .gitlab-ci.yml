# default:
#   image: docker:24.0.5
#   services:
#     - docker:24.0.5-dind
# variables:
#   DOCKER_HOST: tcp://docker:2375
#   SERVICE_NAME: "demo"
#   DOCKER_DRIVER: overlay2
#   DOCKER_TLS_CERTDIR: ""
#   KUBERNETES_PRIVILEGED: "true"

stages:
  - build-package-gradle
  - build-image
  - deploy-image

build-package-gradle 1/1:
  image: alpine/java:21-jdk
  stage: build-package-gradle
  before_script:
    - chmod 777 ./gradlew
  script:
    - echo [INFO] gradle build시작
    - ./gradlew build
  only:
    - main
    - dev
    - merge_requests
    - /^feat\/.*$/ # 특정 브랜치 패턴에서 실행

build-image 1/1:
  stage: build-image
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""] #script tag를 사용하기 위한 override
  script:
    - echo [INFO] start image build
    - echo "{\"auths\":{\"$HARBOR_URL\":{\"username\":\"$HARBOR_USER\",\"password\":\"$HARBOR_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $HARBOR_URL/$CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA

deploy-image 1/1:
  stage: deploy-image
  when: on_success
  script:
    - echo [INFO] start kubectl registry
    - ls
    - ls -r
    - kubectl create ns my-demo
    - kubectl apply -f deployment.yaml -n my-demo:$CI_COMMIT_REF_NAME
  only:
    - main
    - dev
    - merge_requests
    - /^feat\/.*$/ # 특정 브랜치 패턴에서 실행
